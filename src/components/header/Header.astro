---
const { navData, rightMenu } = Astro.props;
---

<script type="module">
	const bodyElement = document.querySelector('body');
	const menuButton = document.querySelector('#menuButton');
	const navHeader = document.querySelector('#odysseyNavHeader');
	const menuButtonIcon = document.querySelector('#menuButtonIcon');
	let scrollPosition = 0;

	menuButton.addEventListener('click', toggleMenu);

	function toggleMenu() {
		if (navHeader.hasAttribute('mobile-menu-open', true)) {
			menuButtonIcon.innerHTML = `menu`;
			// unlock scroll position
			bodyElement.style.removeProperty('overflow');
			bodyElement.style.removeProperty('position');
			bodyElement.style.removeProperty('top');
			bodyElement.style.removeProperty('width');
			window.scrollTo(0, scrollPosition);
		} else {
			menuButtonIcon.innerHTML = `close`;
			// lock scroll position
			scrollPosition = window.pageYOffset;
			bodyElement.style.overflow = 'hidden';
			bodyElement.style.position = 'fixed';
			bodyElement.style.top = `-${scrollPosition}px`;
			bodyElement.style.width = '100%';
		}
		navHeader.toggleAttribute('mobile-menu-open');
	}
</script>

<header id="odysseyNavHeader" class={`${rightMenu ? 'header--right' : ``.trim()}`}>
	<div class="header-logo-menu__container">
		<button id="menuButton">
			<span id="menuButtonIcon" class="material-icons">menu</span>
		</button>
		<a class="header-logo__link" href="/">
			<slot name="logo" />
		</a>
	</div>
	<div class="header-nav__container">
		<div class="header-button search-input docsearch-search-button" id="magnifying-glass">
			<svg width="1em" height="1em" viewBox="0 0 24 24" fill="none" focusable="false" aria-hidden="true" role="img">
				<path
					d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
					stroke="currentColor"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"
					transform="translate(-1)"></path>
			</svg>
		</div>
		<!-- <button id="magnifying-glass" aria-label="Search" class="flex">
			<svg height="16" stroke-linejoin="round" viewBox="0 0 16 16" width="16" style="color: currentcolor;"
				><path
					fill-rule="evenodd"
					clip-rule="evenodd"
					d="M3.5 7C3.5 5.067 5.067 3.5 7 3.5C8.933 3.5 10.5 5.067 10.5 7C10.5 7.88461 10.1718 8.69256 9.63058 9.30876L9.30876 9.63058C8.69256 10.1718 7.88461 10.5 7 10.5C5.067 10.5 3.5 8.933 3.5 7ZM9.96544 11.0261C9.13578 11.6382 8.11014 12 7 12C4.23858 12 2 9.76142 2 7C2 4.23858 4.23858 2 7 2C9.76142 2 12 4.23858 12 7C12 8.11014 11.6382 9.13578 11.0261 9.96544L14.0303 12.9697L14.5607 13.5L13.5 14.5607L12.9697 14.0303L9.96544 11.0261Z"
					fill="currentColor"></path></svg
			>
			&nbsp;Search
		</button> -->
		<slot name="nav">
			{
				navData && (
					<nav>
						<ul>
							{navData.map(navItem => (
								<li>
									<a href={navItem.slug}>{navItem.title}</a>
								</li>
							))}
						</ul>
					</nav>
				)
			}
		</slot>
	</div>
	<div class="header-action-item__container">
		<slot name="action-item" />
	</div>
</header>

<style>
	header {
		width: 100%;
		padding: 1rem 0.5rem;
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
	.header-nav__container {
		display: flex;
		align-items: center;
	}
	header .header-nav__container .docsearch-search-button {
		display: flex;
		margin-right: 15px;
		cursor: pointer;
	}
	header.header--right {
		display: grid;
		grid-template-columns: 1fr auto auto;
	}
	.header-logo__link {
		width: fit-content;
		color: inherit;
		text-decoration: none;
	}
	.header-logo-menu__container {
		display: flex;
		align-items: center;
		z-index: 100;
	}
	.header-action-item__container {
		z-index: 100;
	}
	#menuButton {
		outline: none;
		border: none;
		background-color: transparent;
		margin-right: 0.5rem;
		display: none;
		cursor: pointer;
		-webkit-tap-highlight-color: transparent;
	}
	#menuButton > span.material-icons {
		color: var(--theme-on-bg);
		vertical-align: middle;
	}
	nav {
		display: flex;
	}
	nav ul {
		margin: 0;
		padding: 0;
		list-style: none;
		display: flex;
	}
	nav ul li a {
		text-decoration: none;
		margin-right: 1rem;
		color: inherit;
		opacity: 0.72;
		transition: opacity linear 150ms;
	}
	nav ul li a:hover {
		opacity: 1;
	}
	@media (max-width: 600px) {
		#menuButton {
			display: block;
			z-index: 100;
		}
		.header-nav__container {
			width: 100%;
			height: 100%;
			background-color: var(--theme-bg);
			display: none;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			position: fixed;
			inset: 0;
			z-index: 99;
		}
		header[mobile-menu-open] .header-nav__container {
			display: flex;
		}
		header[mobile-menu-open] nav ul {
			align-items: center;
			flex-direction: column;
		}
		header[mobile-menu-open] nav ul li {
			font-size: var(--font-size-lg);
			/* margin-bottom: 1rem; */
			display: flex;
			align-items: center;
			flex-direction: column;
		}
		header[mobile-menu-open] nav ul li:first-child {
			margin-top: 0.5rem;
		}
	}
	.flex {
		display: flex;
		align-items: center;
		border-radius: 0.25rem; /* Adjust as needed */
		border: 1px solid rgba(0, 0, 0, 0.15);
		background-color: #f5f5f5; /* neutral-100 */
		padding: 0.25rem 0.5rem; /* px-2 py-1 */
		font-size: 0.75rem; /* text-xs */
		transition:
			background-color 0.3s ease-in-out,
			color 0.3s ease-in-out;
	}

	.flex:hover {
		background-color: rgba(0, 0, 0, 0.05); /* hover:bg-black/5 */
		color: #000; /* hover:text-black */
	}

	.flex:focus-visible {
		background-color: rgba(0, 0, 0, 0.05); /* focus-visible:bg-black/5 */
		color: #000; /* focus-visible:text-black */
	}

	.dark .flex {
		border-color: rgba(255, 255, 255, 0.2); /* dark:border-white/20 */
		background-color: #212121; /* dark:bg-neutral-900 */
	}

	.dark .flex:hover {
		background-color: rgba(255, 255, 255, 0.05); /* dark:hover:bg-white/5 */
		color: #fff; /* dark:hover:text-white */
	}

	.dark .flex:focus-visible {
		background-color: rgba(255, 255, 255, 0.05); /* dark:focus-visible:bg-white/5 */
		color: #fff; /* dark:focus-visible:text-white */
	}
</style>
